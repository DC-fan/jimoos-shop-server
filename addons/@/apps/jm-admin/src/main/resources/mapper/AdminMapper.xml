<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jimoos.dao.AdminMapper">
    <resultMap id="BaseResultMap" type="cn.jimoos.model.Admin">
        <!--@mbg.generated-->
        <!--@Table admin."admin"-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="encrypted_password" jdbcType="VARCHAR" property="encryptedPassword"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="ban" jdbcType="INTEGER" property="ban"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
        <result column="deleted" jdbcType="INTEGER" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, username, encrypted_password, salt, ban, create_at, deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_admin
        where id = #{id,jdbcType=BIGINT}
        and deleted = 0
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from t_admin
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.jimoos.model.Admin"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_admin (username, encrypted_password, salt, ban, create_at, deleted)
        values (#{username,jdbcType=VARCHAR}, #{encryptedPassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
        #{ban,jdbcType=INTEGER}, #{createAt,jdbcType=BIGINT},#{deleted,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.jimoos.model.Admin"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="encryptedPassword != null">
                encrypted_password
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="ban != null">
                ban,
            </if>

            <if test="createAt != null">
                create_at,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="encryptedPassword != null">
                #{encryptedPassword,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="ban != null">
                #{ban,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=BIGINT},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.jimoos.model.Admin">
        <!--@mbg.generated-->
        update t_admin
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="encryptedPassword != null">
                encrypted_password = #{encryptedPassword,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="ban != null">
                ban = #{ban,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=BIGINT},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.jimoos.model.Admin">
        <!--@mbg.generated-->
        update t_admin
        set username = #{username,jdbcType=VARCHAR},
        encrypted_password = #{encryptedPassword,jdbcType=VARCHAR},
        salt = #{salt,jdbcType=VARCHAR},
        ban = #{ban,jdbcType=INTEGER},
        create_at = #{createAt,jdbcType=BIGINT},
        deleted = #{deleted,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_admin
        (username, encrypted_password, salt, ban, create_at, deleted)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.username,jdbcType=VARCHAR}, #{item.encryptedPassword,jdbcType=VARCHAR}, #{item.salt,jdbcType=VARCHAR},
            #{item.ban,jdbcType=INTEGER},#{item.create_at,jdbcType=BIGINT},#{item.deleted,jdbcType=INTEGER})
        </foreach>
    </insert>

    <!--auto generated by MybatisCodeHelper on 2020-05-14-->
    <select id="findOneByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_admin
        where username=#{username,jdbcType=VARCHAR} AND deleted = 0
    </select>

    <select id="findAdmins" resultMap="BaseResultMap" parameterType="map">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_admin
        where deleted = 0
        <if test="name!=null and name !=''">
            and username like CONCAT('%', '${name}', '%')
        </if>
        order by id desc
    </select>

<!--auto generated by MybatisCodeHelper on 2021-03-11-->
    <select id="findByIdIn" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_admin
        where id in
        <foreach item="item" index="index" collection="idCollection"
                 open="(" separator="," close=")">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>
</mapper>
